stages:
  - build and package
  - deploy
  - test deploy

.template-conda-build: &template_conda_build
  stage: build and package
  script:
      - export SHERPA_FULL_VERSION=$(git describe --tags --always)
      - export SHERPA_VERSION=`echo $SHERPA_FULL_VERSION | awk '{split($0,a,"-"); print a[1]}'`
      - export SHERPA_BUILD_NUMBER=`echo $SHERPA_FULL_VERSION | awk '{split($0,a,"-"); print a[2]}'`
      - conda build --output-folder /tmp/packages recipes/conda
      - cp -r /tmp/packages .
  artifacts:
    expire_in: "2 weeks"
    paths:
        - packages/

.template-linux-conda-build: &template_linux_conda_build
  <<: *template_conda_build
  image: registry.gitlab.com/olaurino/sherpa-docker-build:master
  tags:
    - sherpa


.template-macos-conda-build: &template_macos_conda_build
  <<: *template_conda_build
  tags:
      - sherpa-macos-build

macos-python2.7-conda-build:
  <<: *template_macos_conda_build
  variables:
      SHERPA_PYTHON_VERSION: "2.7.*"

macos-python3.5-conda-build:
  <<: *template_macos_conda_build
  variables:
      SHERPA_PYTHON_VERSION: "3.5.*"

macos-python3.6-conda-build:
  <<: *template_macos_conda_build
  variables:
      SHERPA_PYTHON_VERSION: "3.6.*"

macos-python3.7-conda-build:
  <<: *template_macos_conda_build
  variables:
      SHERPA_PYTHON_VERSION: "3.7.*"

linux-python2.7-conda-build:
  <<: *template_linux_conda_build
  variables:
    SHERPA_PYTHON_VERSION: '2.7.*'

linux-python3.5-conda-build:
  <<: *template_linux_conda_build
  variables:
    SHERPA_PYTHON_VERSION: '3.5.*'

linux-python3.6-conda-build:
  <<: *template_linux_conda_build
  variables:
    SHERPA_PYTHON_VERSION: '3.6.*'

linux-python3.7-conda-build:
  <<: *template_linux_conda_build
  variables:
    SHERPA_PYTHON_VERSION: '3.7.*'

conda:
  stage: deploy
  tags:
      - sherpa
  image: registry.gitlab.com/olaurino/sherpa-docker-build:master
  dependencies:
      - linux-python2.7-conda-build
      - linux-python3.5-conda-build
      - linux-python3.6-conda-build
      - linux-python3.7-conda-build
      - macos-python2.7-conda-build
      - macos-python3.5-conda-build
      - macos-python3.6-conda-build
      - macos-python3.7-conda-build
  script:
      - echo $CONDA_UPLOAD_TOKEN
      - anaconda -t $CONDA_UPLOAD_TOKEN upload -u sherpa -c dev packages/linux-64/sherpa* --force
      - anaconda -t $CONDA_UPLOAD_TOKEN upload -u sherpa -c dev packages/osx-64/sherpa* --force

.template-linux-test: &template-linux-test
  stage: test deploy
  image: centos:6
  variables:
      PAGER: 'less'
  before_script:
      - yum install -y -q bzip2 libXext libSM libXrender curl less
  script:
      - cd /
      - curl -LO -k http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
      - curl -LO -k https://github.com/sherpa/sherpa-test-data/archive/master.zip # Hack, gitlab can't checkout the submodule from github
      - bash Miniconda3-latest-Linux-x86_64.sh -b -p ~/miniconda
      - export PATH=~/miniconda/bin:$PATH
      # Numpy 1.16 emits a deprecation warning that trips the pytest package pinned by astropy 2.
      # By installing numpy 1.15 we work around the issue, which is the only failure recorded with numpy 1.16
      # Python 2.7 won't be supported for long anyway.
      - conda update -qq -y --all
      - conda create -n test --yes -q -c sherpa/label/dev python=2 astropy sherpa matplotlib numpy=1.15 # How to make sure it's the correct version?
      - source activate test
      - pip install /master.zip
      - sherpa_smoke -f astropy
      - sherpa_test
      - conda create -n test35 --yes -q -c sherpa/label/dev python=3.5 astropy sherpa matplotlib # How to make sure it's the correct version?
      - source activate test35
      - pip install /master.zip
      - sherpa_smoke -f astropy
      - sherpa_test
      - conda create -n test36 --yes -q -c sherpa/label/dev python=3.6 astropy sherpa matplotlib # How to make sure it's the correct version?
      - source activate test36
      - pip install /master.zip
      - sherpa_smoke -f astropy
      - sherpa_test
      - conda create -n test37 --yes -q -c sherpa/label/dev python=3.7 astropy sherpa matplotlib # How to make sure it's the correct version?
      - source activate test37
      - pip install /master.zip
      - sherpa_smoke -f astropy
      - sherpa_test

.template-macos-test: &template-macos-test
  tags:
    - sherpa-macos-build
  stage: test deploy
  script:
    - cd /tmp
    - curl -LO -k https://github.com/sherpa/sherpa-test-data/archive/master.zip
    - conda update -qq -y --all
    - conda create -n test --yes -q -c sherpa/label/dev python=2 astropy sherpa matplotlib numpy=1.15 # How to make sure it's the correct version?
    - conda activate test
    - pip install master.zip
    - sherpa_smoke -f astropy
    - sherpa_test
    - conda create -n test35 --yes -q -c sherpa/label/dev python=3.5 astropy sherpa matplotlib # How to make sure it's the correct version?
    - conda activate test35
    - pip install master.zip
    - sherpa_smoke -f astropy
    - sherpa_test
    - conda create -n test36 --yes -q -c sherpa/label/dev python=3.6 astropy sherpa matplotlib # How to make sure it's the correct version?
    - conda activate test36
    - pip install master.zip
    - sherpa_smoke -f astropy
    - sherpa_test
    - conda create -n test37 --yes -q -c sherpa/label/dev python=3.7 astropy sherpa matplotlib # How to make sure it's the correct version?
    - conda activate test37
    - pip install master.zip
    - sherpa_smoke -f astropy
    - sherpa_test

centos6-test:
  <<: *template-linux-test

centos7-test:
  <<: *template-linux-test
  image: centos:7

ubuntu14-test:
  <<: *template-linux-test
  image: ubuntu:14.04
  before_script:
      - apt-get update && apt-get install -y -q bzip2 curl libxext6 libsm6 libxrender1 less

ubuntu16-test:
  <<: *template-linux-test
  image: ubuntu:16.04
  before_script:
      - apt-get update && apt-get install -y -q bzip2 curl libxext6 libsm6 libxrender1 less

ubuntu18-test:
  <<: *template-linux-test
  image: ubuntu:18.04
  before_script:
      - apt-get update && apt-get install -y -q bzip2 curl libxext6 libsm6 libxrender1 less

fedora29-test:
  <<: *template-linux-test
  image: fedora:29

fedora30-test:
  <<: *template-linux-test
  image: fedora:30

macos-10.13-test:
  <<: *template-macos-test
